<?php
/**
 * d8-webform
 *
 * @package     d8-webform
 * @author      Udit Rawat <uditrawat@fabwebstudio.com>
 * @license     GPL-2.0+
 * @link        http://fabwebstudio.com/
 * @copyright   Fab Web Studio
 * Date:        8/14/2018
 * Time:        12:52 PM
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter.
 *
 * Adds webform product table settings to entity types that are supported via plugins.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function webform_product_table_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // form helper service object
  $form_helper = \Drupal::service('wpt.form_helper');
  // set form state to object
  $form_helper->setFormState($form_state);

  if($form_helper->hasPermission() && $form_helper->isSupportedContentType()){

    // Add a new group to content type
    $form['webform_product_table'] = [
      '#type' => 'details',
      '#group' => isset($form['additional_settings']) ? 'additional_settings' : 'advanced',
      '#title' => t('Webform Product Table'),
      '#description' => t('Webform product table settings.')
    ];

    $form_helper->displayEntitySettings($form['webform_product_table']);

    // Add submission handler.
    if (isset($form['actions']['submit']['#submit'])) {
      foreach (array_keys($form['actions']) as $action) {
        if ($action !== 'preview'
          && isset($form['actions'][$action]['#type'])
          && $form['actions'][$action]['#type'] === 'submit') {
          $form['actions'][$action]['#submit'][] = 'webform_product_table_entity_form_submit';
        }
      }
    }
    // Fix for account page rendering other submit handlers not usable.
    else {
      $form['#submit'][] = 'webform_product_table_entity_form_submit';
    }

  }
}

/**
 * Entity form submit handler
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function webform_product_table_entity_form_submit($form, FormStateInterface &$form_state){
  // form helper service object
  $form_helper = \Drupal::service('wpt.form_helper');
  // set form state to object
  $form_helper->setFormState($form_state);

  if($form_helper->hasPermission() && $form_helper->isSupportedContentType()){
    $values = $form_state->getValues();
    $settings = [
      'enable' => $values['enable_wpt'],
      'type' => $form_helper->getBundle(),
      'item_category' => $values['item_category'] ? $values['item_category'] : '',
      'item_title' => $values['item_title'] ? $values['item_title'] : '',
      'item_number' => $values['item_number'] ? $values['item_number'] : '',
      'item_description' => $values['item_description'] ? $values['item_description'] : '',
      'item_price' => $values['item_price'] ? $values['item_price'] : ''
    ];

    \Drupal::service('wpt.config')->saveBundleSettings(
      $form_helper->getEntityTypeId(),
      $form_helper->getBundle(),
      $settings
    );
  }

}

/**
 * Inject module template functions
 */
module_load_include('inc', 'webform', 'includes/webform.theme.template');

/**
 * Implements hook_theme().
 */
function webform_product_table_theme() {
  return [
    'webform_product_table' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Prepares variables for templates.
 *
 * Default template: webform-product-table.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 */
function template_preprocess_webform_product_table(array &$variables) {
  // Here you can get the composite element and alter it.
  _template_preprocess_webform_composite($variables);
}

/**
 * Add default elements
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function webform_product_table_webform_submission_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($element = Drupal::service('wpt.config')->isFormHaveProductTable($form)) {
    $total = $element['#item_total'] ? $element['#item_total'] :0;
    $currency = $element['#currency_text'] ? $element['#currency_text'] :'EUR';
    $form['footer']['total_row'] = [
      '#markup' => '<span class="totel-title">Total</span>
                    <div class="table-price">
                    <span class="total-price">'.$total.'</span>
                    <span class="currency">'.$currency.'</span></div>'
    ];
  }
}